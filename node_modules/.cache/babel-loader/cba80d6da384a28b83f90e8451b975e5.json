{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwire/Ga_Project4/GA_project4_frontend/GA_Project4_frontend/coin_exchange_app/src/components/coins.jsx\";\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = 'http://localhost:3003';\n\nclass Coin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      _id: '',\n      country: '',\n      img: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.setUpdateCoin();\n  }\n\n  setUpdateCoin() {\n    this.setState({\n      _id: this.props.coinUpdate._id,\n      country: this.props.coinUpdate.country,\n      img: this.props.coinUpdate.img\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.currentTarget.id]: event.currentTarget.value\n    });\n  }\n\n  handleSubmit(event) {\n    fetch(baseURL + '/coins/' + this.props.coinUpdate._id, {\n      method: 'PUT',\n      body: JSON.stringify({\n        country: this.state.country,\n        img: this.state.img\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(resJson => {\n      this.props.setUpdateCoin(resJson);\n      this.setState({\n        country: '',\n        img: ''\n      });\n    }).catch(error => console.log({\n      'Error': error\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"country\",\n          id: \"country\",\n          value: this.state.country,\n          onChange: this.handleChange,\n          placeholder: this.state.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"img\",\n          name: \"img\",\n          id: \"img\",\n          value: this.state.img,\n          onChange: this.handleChange,\n          placeholder: this.state.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default Coin;","map":{"version":3,"sources":["/Users/ryanwire/Ga_Project4/GA_project4_frontend/GA_Project4_frontend/coin_exchange_app/src/components/coins.jsx"],"names":["Component","baseURL","Coin","constructor","props","state","_id","country","img","handleChange","bind","handleSubmit","componentDidMount","setUpdateCoin","setState","coinUpdate","event","currentTarget","id","value","fetch","method","body","JSON","stringify","headers","then","res","json","resJson","catch","error","console","log","render"],"mappings":"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","sourcesContent":["import { Component } from 'react';\n\nconst baseURL = 'http://localhost:3003';\n\n\nclass Coin extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id: '',\n            country: '',\n            img: ''\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n\n    }\n    componentDidMount() {\n        this.setUpdateCoin();\n    }\n    setUpdateCoin() {\n        this.setState({\n            _id: this.props.coinUpdate._id,\n            country: this.props.coinUpdate.country,\n            img: this.props.coinUpdate.img\n        })\n    }\n\n\n    handleChange(event) {\n        this.setState({\n            [event.currentTarget.id]: event.currentTarget.value\n        })\n    }\n    handleSubmit(event) {\n        fetch(baseURL + '/coins/' + this.props.coinUpdate._id, {\n            method: 'PUT',\n            body: JSON.stringify({\n                country: this.state.country,\n                img: this.state.img\n            }),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(resJson => {\n                this.props.setUpdateCoin\n                (resJson)\n                this.setState({\n                    country: '',\n                    img: ''\n                })\n            })\n            .catch(error => console.log({ 'Error': error }))\n    };\n\n\n\n    render() {\n        return (\n            <div>\n            <form onSubmit={this.handleSubmit}>\n                <label htmlFor=\"country\"></label>\n                <input type=\"text\" name=\"country\" id='country' value={this.state.country} onChange={this.handleChange} placeholder={this.state.country} />\n                <label htmlFor=\"img\"></label>\n                <input type=\"img\" name=\"img\" id='img' value={this.state.img} onChange={this.handleChange} placeholder={this.state.img} />\n                <input type=\"submit\" value=\"Edit\" />\n\n            </form>\n            </div>\n        )\n    }\n};\n\nexport default Coin;\n"]},"metadata":{},"sourceType":"module"}